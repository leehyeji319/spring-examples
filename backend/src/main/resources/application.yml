server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: utf-8
      enabled: true
    session:
      timeout: 30m

spring:
  profiles:
    include: aws
  output.ansi.enabled: always

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update # create, update, none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    #show-sql: true
    format-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: lhj_testdb
        default_batch_fetch_size: 100
    defer-datasource-initialization: true

  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zome: Asia/Seoul


app:
  jwtSecret: jwtsigntutorialasdfasdfasdfasdfasdf
  jwtExpirationInMs: 604800000

logging.level:
  org.hibernate.SQL: debug
  org.hibernate.type: trace

#  security:
#    oauth2.client:
#      registration:
#        google:
#          clientId: '692015238080-bg3no0p8case2vvhd6n0d3iii4o6hhpq.apps.googleusercontent.com'
#          clientSecret: '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'
#          #redirectUriTemplate: "http://localhost:8080/oauth2/callback/{registrationId}"
#          scope:
#            - email
#            - profile


#  servlet:
#    multipart:
#      enabled: true
#      max-file-size: 2MB




## cors ??
#cors:
#  allowed-origins: 'http://localhost:3000'
#  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
#  allowed-headers: '*'
#  max-age: 3600

## jwt secret key ??
#jwt.secret: '8sknjlO3NPTBqo319DHLNqsQAfRJEdKsETOds'
#
## ?? ?? secret Key ? RedirectUri ??
#app:
#  auth:
#    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
#    tokenExpiry: 1800000
#    refreshTokenExpiry: 604800000
#  oauth2:
#    authorizedRedirectUris:
#      - http://localhost:3000/oauth/redirect